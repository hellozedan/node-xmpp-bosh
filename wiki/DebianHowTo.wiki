#summary A step-by-step help to install node-xmpp-bosh on a Debian system.

= Introduction =

node-xmpp-bosh installation can be really hard with little sysadmin knowledges. In this help, we will process to a step-by-step node-xmpp-bosh installation on Debian and Debian-based systems, like Ubuntu.

= node.js installation =

TODO

-> 0.4.7 version!

= Plugins installation =

TODO

= node-xmpp-bosh installation =

Once node.js and node-xmpp-bosh dependencies are installed, we can install node-xmpp-bosh itself and change its configuration.

== node-xmpp-bosh itself ==

Get the last node-xmpp-bosh version on the downloads page, or get its trunk using Subversion (recommended):

`svn checkout http://node-xmpp-bosh.googlecode.com/svn/trunk/ /usr/local/lib/bosh`

The use of SVN offers you the possibility to update node-xmpp-bosh quickly to the last development version using the following commands:

`cd /usr/local/lib/bosh`
`svn up`

After an update, you will need to restart node-xmpp-bosh using the init.d command (see after).

== node-xmpp-bosh configuration ==

Copy the node-xmpp-bosh sample configuration file in a new file:

`cp /usr/local/lib/bosh/bosh.conf.example.js /etc/bosh.js.conf`

Then, open it and start configuring it to meet your needs!

-> FATAL for logs

== node-xmpp-bosh logs ==

To be able to report the crash logs to the node-xmpp-bosh issue tracker, you have to create the logging folder and the logging files:

`mkdir /var/log/bosh`

Then, the two logging files:

`touch /var/log/bosh.log /var/log/bosh.err`

Finally, apply permissive rights to the whole:

`chmod 777 -R /var/log/bosh`

= Startup scripts installation =

Some startup scripts may be useful to make the node-xmpp-bosh process management faster.

== init.d script ==

node-xmpp-bosh will not be launched on system startup once installed, that's why you'd better use the following init.d script. Firstly, create the file:

`touch /etc/init.d/bosh`

Then, apply permissive rights:

`chmod 777 /etc/init.d/bosh`

Open the file:

`nano /etc/init.d/bosh`

Paste the following content:

{{{
#! /bin/sh
#
# NXB        Start/stop NXB BOSH server
#

PATH=/sbin:/bin:/usr/sbin:/usr/bin
NODE_PATH=/usr/local/lib/node
BOSH=/usr/local/bin/bosh
NAME=run-server.js

test -e $BOSH || exit 0

start()
{
    if ! pgrep -f $NAME
    then
        export NODE_PATH
        $BOSH
    fi
}

stop()
{
    killall node
}

case "$1" in
    start)
	echo -n "Starting bosh server"
	start &
    ;;
    stop)
	echo -n "Stopping bosh server"
	stop &
    ;;
    restart)
	echo -n "Restarting bosh server"
	$0 stop
	$0 start
    ;;
    *)
	echo "Usage: $0 {start|stop|restart}" >&2
	exit 1
    ;;
esac

if [ $? -eq 0 ]; then
    echo .
else
    echo " failed."
fi

exit 0
}}}

Save it (CTRL+O using nano).

Then, you have to create the related command script:

`touch /usr/local/bin/bosh`

Then, apply permissive rights:

`chmod 777 /usr/local/bin/bosh`

Open the file:

`nano /usr/local/bin/bosh`

Paste the following content:

{{{
#!/usr/bin/env sh
exec /usr/local/lib/bosh/run-server.js >> /var/log/bosh/bosh.log 2>> /var/log/bosh/bosh.err & "$@"
}}}

Save it (CTRL+O using nano).

Once done, you will be able to start, stop or restart node-xmpp-bosh using this command:

`/etc/init.d/bosh {start|stop|restart}`

== cronjob ==

To avoid any downtime of your BOSH service, you may want to use a cronjob to start node-xmpp-bosh if not started (the check is proceeded every minute).

First, execute this:

`crontab -e`

Then, at the end of the file, paste this:

`*/1 * * * * /etc/init.d/bosh start >>/dev/null`

Remember this solution is not the best (not really clean), but is simple and works fine. Advanced users may want to use daemontools.